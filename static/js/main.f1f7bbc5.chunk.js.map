{"version":3,"sources":["components/FormFields.tsx","components/Carousel.tsx","App.tsx","index.tsx"],"names":["Input","_ref","name","min","max","step","defaultValue","onChange","_jsxs","htmlFor","children","concat","_jsx","id","type","event","target","value","Carousel","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","state","itemWidth","frameSize","animationDuration","translate","stepPrev","_this$state","setState","prevState","stepNext","_this$state2","hiddenScroll","props","images","widthChanger","stepChanger","AnimationDurationChanger","FrameSizeChanger","_createClass","key","this","_this$state3","className","style","width","transform","transition","map","image","i","src","alt","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1f7bbc5.chunk.js","sourcesContent":["type Props = {\n  name: string,\n  min: number,\n  max: number,\n  step: number,\n  defaultValue: number,\n  onChange: (value: number) => void,\n};\n\nexport const Input: React.FC<Props> = ({\n  name,\n  min,\n  max,\n  step,\n  defaultValue,\n  onChange,\n}) => {\n  return (\n    <label htmlFor={name}>\n      {`${name}`}\n      <input\n        id={name}\n        type=\"range\"\n        defaultValue={defaultValue}\n        step={step}\n        min={min}\n        max={max}\n        onChange={(event) => {\n          onChange(+event.target.value);\n        }}\n      />\n    </label>\n  );\n};\n","import React from 'react';\nimport './Carousel.scss';\nimport { Input } from './FormFields';\n\ntype Props = {\n  images: string[],\n};\n\ntype State = {\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  translate: number,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    translate: 0,\n  };\n\n  stepPrev = () => {\n    const { step, itemWidth, translate } = this.state;\n\n    if (translate + step * itemWidth < 0) {\n      this.setState(prevState => ({\n        translate: prevState.translate + step * itemWidth,\n      }));\n    } else {\n      this.setState({ translate: 0 });\n    }\n  };\n\n  stepNext = () => {\n    const {\n      step, itemWidth, translate, frameSize,\n    } = this.state;\n\n    const hiddenScroll = -(\n      itemWidth * this.props.images.length - frameSize * itemWidth);\n\n    if (translate - step * itemWidth < hiddenScroll) {\n      this.setState({ translate: hiddenScroll });\n    } else {\n      this.setState((prevState) => ({\n        translate: prevState.translate - step * itemWidth,\n      }));\n    }\n  };\n\n  widthChanger = (value: number) => {\n    this.setState({ itemWidth: value });\n  };\n\n  stepChanger = (value: number) => {\n    this.setState({ step: value });\n  };\n\n  AnimationDurationChanger = (value: number) => {\n    this.setState({ animationDuration: value });\n  };\n\n  FrameSizeChanger = (value: number) => {\n    this.setState({ frameSize: value });\n  };\n\n  render() {\n    const { images } = this.props;\n    const {\n      itemWidth,\n      frameSize,\n      translate,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel__container\"\n          style={{ width: `${itemWidth * frameSize}px` }}\n        >\n\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${translate}px)`,\n              transition: `transform ${animationDuration}ms`,\n            }}\n          >\n            {images.map((image, i) => (\n              <li\n                key={image}\n              >\n                <img\n                  src={image}\n                  alt={`${i}`}\n                  width={itemWidth}\n                />\n              </li>\n            ))}\n          </ul>\n\n          <div\n            className=\"Carousel__buttons\"\n          >\n            <button\n              type=\"button\"\n              onClick={this.stepPrev}\n            >\n              &larr;\n            </button>\n            <button\n              data-cy=\"next\"\n              type=\"button\"\n              onClick={this.stepNext}\n            >\n              &rarr;\n            </button>\n          </div>\n        </div>\n        <div className=\"Inputs\">\n          <Input\n            name=\"ItemWidth\"\n            defaultValue={130}\n            min={50}\n            max={140}\n            step={10}\n            onChange={this.widthChanger}\n          />\n\n          <Input\n            name=\"Step\"\n            defaultValue={3}\n            min={1}\n            max={10}\n            step={1}\n            onChange={this.stepChanger}\n          />\n\n          <Input\n            name=\"AnimationDuration\"\n            defaultValue={1000}\n            min={100}\n            max={3000}\n            step={100}\n            onChange={this.AnimationDurationChanger}\n          />\n\n          <Input\n            name=\"Frame-size\"\n            defaultValue={3}\n            min={1}\n            max={10}\n            step={1}\n            onChange={this.FrameSizeChanger}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy='title'>Carousel with {images.length} images</h1>\n\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}